package de.lere.vaad;

import algoanim.properties.GraphProperties;
import algoanim.properties.SourceCodeProperties;
import algoanim.properties.TextProperties;
import de.lere.vaad.animation.Timings;

/**
 * Container class that contains the configuration for the SplayTree. <br>
 * The properties all have a default value set and should if at all only be
 * changed during initialization.
 * 
 * @author Leo Roos, Rene Hertling
 * 
 */
public class BinaryTreeProperties {

	private static final String genByName = "Generated by "
			+ BinaryTreeProperties.class.getName();

	public int sourceCodeSize = 12;

	public int textFontSize = 12;

	public int verticalTextGap = 5;

	/**
	 * The vertical height of the text including a vertical gap to the next line
	 * of text
	 */
	public int textVerticalHeight = (int) (1.5 * textFontSize);

	/**
	 * The vertical height of the source including a vertical gap to the next
	 * line of source. (factor is merely guessed) and can not be used to adjust
	 * the gap in a {@code SourceCode} object.
	 */
	public int sourceVerticalHeight = (int) (1.5 * textFontSize);

	public String authors = "NoAuthor";

	public String title = "NoTitle";

	/**
	 * Screen resolution in pixel
	 */
	public ScreenResolution screenResolution = new ScreenResolution(800, 600);

	private GraphProperties graphProperties;

	private SourceCodeProperties sourceCodeProperties;

	private TextProperties textProperties;

	public GraphProperties getGraphProperties() {
		if (graphProperties == null) {
			return new GraphProperties(genByName);
		} else {
			return graphProperties;
		}
	}

	public void setGraphProperties(GraphProperties graphProperties) {
		this.graphProperties = graphProperties;
	}

	public SourceCodeProperties getSourceCodeProperties() {
		if (sourceCodeProperties == null) {
			sourceCodeProperties = new SourceCodeProperties();			
		}
		return sourceCodeProperties;
	}

	public void setSourceCodeProperties(
			SourceCodeProperties sourceCodeProperties) {
		this.sourceCodeProperties = sourceCodeProperties;
	}

	public TextProperties getTextProperties() {
		if (textProperties == null) {
			textProperties = new TextProperties();
		}
		return textProperties;
	}

	public void setTextProperties(TextProperties textProperties) {
		this.textProperties = textProperties;
	}

	public static class ScreenResolution {
		public ScreenResolution(int width, int height) {
			this.width = width;
			this.height = height;
		}

		public final int width;
		public final int height;
	}
	
	Timings timings = new Timings();
	
	public void setTimings(Timings timings) {
		this.timings = timings;
	}
	
	public Timings getTimings() {
		return timings;
	}

}
